% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genesStatistics.R
\name{GenesStatistics}
\alias{GenesStatistics}
\alias{calculateGenesCE}
\alias{calculateGDIGivenCorr}
\alias{calculateGDI}
\alias{calculatePValue}
\alias{calculatePDI}
\title{Calculations of genes statistics}
\usage{
calculateGenesCE(objCOTAN)

calculateGDIGivenCorr(corr, numDegreesOfFreedom)

calculateGDI(objCOTAN, statType = "S")

calculatePValue(
  objCOTAN,
  statType = "S",
  geneSubsetCol = vector(mode = "character"),
  geneSubsetRow = vector(mode = "character")
)

calculatePDI(
  objCOTAN,
  statType = "S",
  geneSubsetCol = vector(mode = "character"),
  geneSubsetRow = vector(mode = "character")
)
}
\arguments{
\item{objCOTAN}{a \code{COTAN} object}

\item{corr}{a \code{matrix} object, possibly a subset of the columns of the full
symmetric matrix}

\item{numDegreesOfFreedom}{a \code{int} that determines the number of degree of
freedom to use in the \eqn{\chi^{2}} test}

\item{statType}{Which statistics to use to compute the p-values. By default
it will use the "S" (Pearson's \eqn{\chi^{2}} test) otherwise the "G"
(G-test)}

\item{geneSubsetCol}{an array of genes. It will be put in columns. If left
empty the function will do it genome-wide.}

\item{geneSubsetRow}{an array of genes. It will be put in rows. If left empty
the function will do it genome-wide.}
}
\value{
\code{calculateGenesCE()} returns a named \code{array} with the \emph{cross-entropy}
of each gene

\code{calculateGDIGivenCorr()} returns a \code{vector} with the \emph{GDI} data for
each column of the input

\code{calculateGDI()} returns a \code{data.frame} with:
\itemize{
\item \code{"sum.raw.norm"} the sum of the normalized data rows
\item \code{"GDI"} the \emph{GDI} data
\item \code{"exp.cells"} the percentage of cells expressing the gene
}

\code{calculatePValue()} returns a \emph{p-value} \code{matrix} as \code{dspMatrix}

\code{calculatePDI()} returns a \emph{Pair Differential Index} \code{matrix} as
\code{dspMatrix}
}
\description{
A collection of functions returning various statistics
associated to the genes. In particular the \emph{discrepancy} between the
expected probabilities of zero and their actual occurrences, both at single
gene level or looking at genes' pairs
}
\details{
\code{calculateGenesCE()} is used to calculate the discrepancy between
the expected probability of zero and the observed zeros across all cells
for each gene as \emph{cross-entropy}: \eqn{-\sum_{c}{\mathbb{1}_{X_c == 0}
   \log(p_c) - \mathbb{1}_{X_c != 0} \log(1 - p_c)}} where \eqn{X_c} is the
observed count and \eqn{p_c} the probability of zero

\code{calculateGDIGivenCorr()} produces a \code{vector} with the \emph{GDI} for
each column based on the given correlation matrix, uinsg the \emph{Pearson's
\emph{\eqn{\chi^{2}}} test}

\code{calculateGDI()} produces a \code{data.frame} with the \emph{GDI} for each
gene based on the \code{COEX} matrix

\code{calculatePValue()} computes the p-values for genes in the \code{COTAN}
object. It can be used genome-wide or by setting some specific genes of
interest. By default it computes the \emph{p-values} using the \code{S} statistics
(\eqn{\chi^{2}})

\code{calculatePDI()} computes the p-values for genes in the \code{COTAN}
object using \code{\link[=calculatePValue]{calculatePValue()}} and takes their
\eqn{\log{({-\log{(\cdot)}})}} to calculate the genes' \emph{Pair Differential
Index}
}
